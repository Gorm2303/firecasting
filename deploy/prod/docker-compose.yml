x-traefik-labels-front: &labels_front
  traefik.enable: "true"
  traefik.http.routers.front.rule: Host(`${FRONT_HOST}`)
  traefik.http.routers.front.entrypoints: websecure
  traefik.http.routers.front.tls: "true"
  traefik.http.routers.front.tls.certresolver: le           # <-- add this
  traefik.http.services.front.loadbalancer.server.port: "3000"

x-traefik-labels-api: &labels_api
  traefik.enable: "true"
  traefik.http.routers.api.rule: Host(`${API_HOST}`)
  traefik.http.routers.api.entrypoints: websecure
  traefik.http.routers.api.tls: "true"
  traefik.http.routers.api.tls.certresolver: le             # <-- add this
  traefik.http.services.api.loadbalancer.server.port: "8080"


services:
  traefik:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --api.dashboard=false
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    labels:
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-https
      - traefik.http.middlewares.redirect-https.redirectscheme.scheme=https
      - com.centurylinklabs.watchtower.enable=false  # don't let Watchtower touch Traefik
    restart: unless-stopped

  frontend:
    image: gorm2303/firecasting-frontend:latest
    labels:
      <<: *labels_front
      com.centurylinklabs.watchtower.enable: "true"
    restart: unless-stopped
    depends_on: [api]

  api:
    image: gorm2303/firecasting-api:latest
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_WEB_CORS_ALLOWED_ORIGINS: https://${FRONT_HOST}
    labels:
      <<: *labels_api
      com.centurylinklabs.watchtower.enable: "true"
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    # every 5 minutes; only update labeled containers; clean old images
    command: --schedule "0 */5 * * * *" --label-enable --cleanup
    environment:
      - TZ=Europe/Copenhagen
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped


volumes:
  traefik_letsencrypt:
